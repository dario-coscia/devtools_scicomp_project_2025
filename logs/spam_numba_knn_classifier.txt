Timer unit: 1e-06 s

Total time: 0 s
File: /Users/dariocoscia/anaconda3/envs/devtools_scicomp/lib/python3.9/site-packages/pyclassify/utils.py
Function: distance at line 26

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    26                                           @profile
    27                                           def distance(point1: list[float], point2: list[float]) -> float:
    28                                               """
    29                                               Calculates and returns the square of the Euclidean distance between two points.
    30                                               
    31                                               Args:
    32                                               - point1 (list[float]): The first point in the form of a list of coordinates.
    33                                               - point2 (list[float]): The second point in the form of a list of coordinates.
    34                                               
    35                                               Returns:
    36                                               - float: The square of the Euclidean distance between the two points.
    37                                               """
    38                                               return sum((a - b) ** 2 for a, b in zip(point1, point2))

Total time: 0 s
File: /Users/dariocoscia/anaconda3/envs/devtools_scicomp/lib/python3.9/site-packages/pyclassify/utils.py
Function: distance_numpy at line 40

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    40                                           @profile
    41                                           def distance_numpy(point1: numpy.ndarray, point2: numpy.ndarray) -> float:
    42                                               """
    43                                               Calculates and returns the square of the Euclidean distance between two points.
    44                                           
    45                                               Args:
    46                                               - point1 (np.ndarray): The first point as a numpy array of coordinates.
    47                                               - point2 (np.ndarray): The second point as a numpy array of coordinates.
    48                                           
    49                                               Returns:
    50                                               - float: The square of the Euclidean distance between the two points.
    51                                               """
    52                                               return numpy.sum((point1 - point2) ** 2)

Total time: 0.022852 s
File: /Users/dariocoscia/anaconda3/envs/devtools_scicomp/lib/python3.9/site-packages/pyclassify/utils.py
Function: majority_vote at line 54

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    54                                           @profile
    55                                           def majority_vote(neighbors: list[int]) -> int:
    56                                               """
    57                                               Calculates and returns the class label with the most votes among the neighbors.
    58                                               
    59                                               Args:
    60                                               - neighbors (list[int]): A list of class labels representing the neighboring points.
    61                                               
    62                                               Returns:
    63                                               - int: The class label (of any hashable type) with the highest count in the list of neighbors.
    64                                               """
    65      3681        899.0      0.2      3.9      vote_count = {}
    66     22086       4202.0      0.2     18.4      for neighbor in neighbors:
    67     18405       5387.0      0.3     23.6          if neighbor in vote_count:
    68     12482       3578.0      0.3     15.7              vote_count[neighbor] += 1
    69                                                   else:
    70      5923       1657.0      0.3      7.3              vote_count[neighbor] = 1
    71      3681       6567.0      1.8     28.7      majority_class = max(vote_count, key=vote_count.get)
    72      3681        562.0      0.2      2.5      return majority_class

Total time: 130.859 s
File: /Users/dariocoscia/anaconda3/envs/devtools_scicomp/lib/python3.9/site-packages/pyclassify/classifier.py
Function: _get_k_nearest_neighbors at line 40

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    40                                               @profile
    41                                               def _get_k_nearest_neighbors(
    42                                                       self,
    43                                                       X: list[list[float]],
    44                                                       y: list[int],
    45                                                       x: list[float]) -> list[int]:
    46                                                   """
    47                                                   Finds and returns the labels of the k-nearest neighbors of a given point.
    48                                                   
    49                                                   Args:
    50                                                   - X (list[list[float]]): A list of training data points, where each point is represented
    51                                                                             as a list of coordinates (features).
    52                                                   - y (list[int]): A list of class labels corresponding to the training data points.
    53                                                   - x (list[float]): A new data point (as a list of coordinates) for which the k-nearest 
    54                                                                       neighbors are to be found.
    55                                                   
    56                                                   Returns:
    57                                                   - list[int]: A list of class labels corresponding to the k-nearest neighbors.
    58                                                   """
    59      3681  130322799.0  35404.2     99.6          distances = [(xi, yi, self.distance(xi, x)) for xi, yi in zip(X, y)]
    60      3681     531501.0    144.4      0.4          sorted_neighbors = sorted(distances, key=lambda item: item[2])[:self.k]
    61      3681       4954.0      1.3      0.0          return [yi for _, yi, _ in sorted_neighbors]

Total time: 131.138 s
File: /Users/dariocoscia/anaconda3/envs/devtools_scicomp/lib/python3.9/site-packages/pyclassify/classifier.py
Function: __call__ at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                               @profile
    64                                               def __call__(self,
    65                                                            data: tuple[list[list[float]], list[int]],
    66                                                            new_points: list[list[float]]) -> list[int]:
    67                                                   """
    68                                                   Classifies new data points using the kNN algorithm.
    69                                                   
    70                                                   Args:
    71                                                   - data (tuple[list[list[float]], list[int]]): A tuple containing:
    72                                                       - X (list[list[float]]): A list of training data points (each a list of coordinates).
    73                                                       - y (list[int]): A list of class labels corresponding to the training data.
    74                                                   - new_points (list[list[float]]): A list of new data points to classify, each represented 
    75                                                                                     as a list of coordinates.
    76                                                   
    77                                                   Returns:
    78                                                   - list[int]: A list of predicted class labels for the new points.
    79                                                   """
    80         1          0.0      0.0      0.0          X, y = data
    81         1          0.0      0.0      0.0          predictions = []
    82         1          0.0      0.0      0.0          if self.backhand == 'numpy' or self.backhand == 'numba':
    83         1       6365.0   6365.0      0.0              X, y, new_points = np.array(X), np.array(y), np.array(new_points)
    84                                           
    85      3682       1471.0      0.4      0.0          for point in new_points:
    86      3681  131083471.0  35610.8    100.0              neighbors = self._get_k_nearest_neighbors(X, y, point)
    87      3681      44570.0     12.1      0.0              predicted_class = majority_vote(neighbors)
    88      3681       1656.0      0.4      0.0              predictions.append(predicted_class)
    89         1          0.0      0.0      0.0          return predictions

  0.00 seconds - /Users/dariocoscia/anaconda3/envs/devtools_scicomp/lib/python3.9/site-packages/pyclassify/utils.py:26 - distance
  0.00 seconds - /Users/dariocoscia/anaconda3/envs/devtools_scicomp/lib/python3.9/site-packages/pyclassify/utils.py:40 - distance_numpy
  0.02 seconds - /Users/dariocoscia/anaconda3/envs/devtools_scicomp/lib/python3.9/site-packages/pyclassify/utils.py:54 - majority_vote
130.86 seconds - /Users/dariocoscia/anaconda3/envs/devtools_scicomp/lib/python3.9/site-packages/pyclassify/classifier.py:40 - _get_k_nearest_neighbors
131.14 seconds - /Users/dariocoscia/anaconda3/envs/devtools_scicomp/lib/python3.9/site-packages/pyclassify/classifier.py:63 - __call__
